%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - yaml
  - api.yaml
scope: source.yaml
extends: Packages/YAML/YAML.sublime-syntax

# @TODO parameters
variables:
  swagger: '(swagger|info|host|basePath|schemes|consumes|produces|paths|definitions|parameters|responses|securityDefinitions|security|tags|externalDocs)'
  info: '(title|description|termsOfService|contact|license|version)'
  path: '(get|post|put|delete|options|head|patch|parameters)'
  operation: '(tags|summary|description|externalDocs|operationId|consumes|produces|parameters|responses|schemes|deprecated|security)'
  externalDocs: (description|url)
  contact: (name|url|email)
  license: (name|url)
  parameter: (name|in|description|required|schema|type|format|allowEmptyValue|items|collectionFormat|default|maximum|exclusiveMaximum|minimum|exclusiveMinimum|maxLength|minLength|pattern|maxItems|minItems|uniqueItems|enum|multipleOf)
  schema: (format|title|description|default|multipleOf|maximum|exclusiveMaximum|minimum|exclusiveMinimum|maxLength|minLength|pattern|maxItems|minItems|uniqueItems|maxProperties|minProperties|required|enum|type|items|allOf|properties|additionalProperties|discriminator|readOnly|xml|externalDocs|example)
  responses: (description|schema|headers|examples)
  # security: wip

contexts:
  node:
    - meta_prepend: true
    - include: Packages/OpenAPI/Reference.sublime-syntax
    - include: swagger
    - include: default-context

  extension:
    - match: '(x\-)([\w\-]+)\b'
      scope: entity.name.constant entity.name.other.extension

  reference:
    - match: '^[ ]+(\$ref) *(\:) *'
      captures:
        1: keyword.other
        2: punctuation.separator.key-value.mapping
      push:
        - meta_scope: meta.block.swagger.reference
        - match: "['\"]"
          scope: punctuation.definition.string.begin
          push:
            - match: '\#\/(.+)\/([\w\-]+)'
              scope: support.type
              captures:
                2: entity.other.inherited-class
            - match: "['\"]"
              scope: punctuation.definition.string.end
              pop: 2

  default-context:
    - include: extension
    - include: block-node

  swagger:
    - meta_scope: meta.tag.swagger

    - match: '^info'
      scope: keyword.other
      push: Packages/OpenAPI/Info.sublime-syntax

    # - match: '^(responses)(\:)'
    - match: '^responses'
      scope: keyword.other
      # captures:
      #   1: keyword.other
      #   2: punctuation.separator.key-value.mapping
      push: Packages/OpenAPI/Responses.sublime-syntax

    - match: '^securityDefinitions'
      scope: keyword.other
      push: Packages/OpenAPI/SecurityDefinitions.sublime-syntax

    - match: '^security'
      scope: keyword.other
      push: Packages/OpenAPI/SecurityDefinitions.sublime-syntax

    - match: '^definitions'
      scope: keyword.other
      push: Packages/OpenAPI/Definitions.sublime-syntax

    - match: '^parameters'
      scope: keyword.other
      push: Packages/OpenAPI/Parameters.sublime-syntax

    - match: '^paths'
      scope: keyword.other
      push: Packages/OpenAPI/Paths.sublime-syntax

    - match: '^{{swagger}}'
      scope: keyword.other.swagger

    # - include: block-node
    # - match: '^\s+{{swagger}}'
    #   scope: invalid.illegal

  parameters:
    - match: '^(?:\t{1}| {2})(\w+)\: *'
      captures:
        1: entity.name.type

    - match: '^(?=\S)'
      pop: true
    - include: default-context
